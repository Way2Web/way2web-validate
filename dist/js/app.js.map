{"version":3,"sources":["validate.js"],"names":["Way2Validate","$element","version","globals","errors","formGroups","selectors","group","input","attributes","url","classes","error","help","element","on","send","bind","event","$","target","data","serialize","axios","method","validateStatus","status","then","success","catch","preventDefault","find","unbind","submit","removeClass","remove","each","showErrors","field","formGroup","closest","addClass","append","join","console"],"mappings":";;;;;;AAAA;;;IAGMA;AACF;;;;;AAKA,0BAAYC,QAAZ,EAAsB;AAAA;;AAClB;AACA,aAAKC,OAAL,GAAe,OAAf;;AAEA;;;;;AAKA,aAAKC,OAAL,GAAe;AACXC,oBAAY,EADD;AAEXC,wBAAY;AAFD,SAAf;;AAKA;;;;;AAKA,aAAKC,SAAL,GAAiB;AACbC,mBAAO,aADM;AAEbC,mBAAO;AAFM,SAAjB;;AAKA;;;;;AAKA,aAAKC,UAAL,GAAkB;AACdC,iBAAK;AADS,SAAlB;;AAIA;;;;;AAKA,aAAKC,OAAL,GAAe;AACXC,mBAAO,WADI;AAEXC,kBAAO;AAFI,SAAf;;AAKA,aAAKC,OAAL,GAAeb,QAAf;AACA,aAAKa,OAAL,CAAaC,EAAb,CAAgB,QAAhB,EAA0B,KAAKC,IAAL,CAAUC,IAAV,CAAe,IAAf,CAA1B;AACH;;AAED;;;;;;;;;6BAKKC,OAAO;AACR,iBAAKJ,OAAL,GAAeK,EAAED,MAAME,MAAR,CAAf;AACA,gBAAIV,MAAM,KAAKI,OAAL,CAAaO,IAAb,CAAkB,KAAKZ,UAAL,CAAgBC,GAAlC,CAAV;AACA,gBAAIW,OAAO,KAAKP,OAAL,CAAaQ,SAAb,EAAX;;AAEA,gBAAG,CAACZ,GAAJ,EAAS;AACL,qBAAKE,KAAL;;AAEA;AACH;;AAEDW,kBAAM;AACFC,wBAAgB,MADd;AAEFd,qBAAgBA,GAFd;AAGFW,sBAAgBA,IAHd;AAIFI,gCAAgB,wBAACC,MAAD,EAAY;AACxB,2BAAOA,SAAS,GAAhB;AACH;AANC,aAAN,EAQKC,IARL,CAQU,KAAKC,OAAL,CAAaX,IAAb,CAAkB,IAAlB,CARV,EASKY,KATL,CASW,KAAKjB,KAAL,CAAWK,IAAX,CAAgB,IAAhB,CATX;;AAWAC,kBAAMY,cAAN;AACH;;AAED;;;;;;;;gCAKQT,MAAM;AACV,gBAAIhB,aAAa,KAAKS,OAAL,CAAaiB,IAAb,CAAkB,KAAKzB,SAAL,CAAeC,KAAjC,CAAjB;;AAEA,gBAAGc,KAAKK,MAAL,IAAe,GAAlB,EAAuB;AACnB,qBAAKvB,OAAL,CAAaC,MAAb,GAAsB,EAAtB;;AAEA,qBAAKU,OAAL,CAAakB,MAAb,CAAoB,QAApB,EAA8BC,MAA9B;AACH,aAJD,MAIO;AACH5B,2BAAW6B,WAAX,CAAuB,KAAKvB,OAAL,CAAaC,KAApC;AACAP,2BAAW0B,IAAX,CAAgB,MAAM,KAAKpB,OAAL,CAAaE,IAAnC,EAAyCsB,MAAzC;;AAEA,qBAAKhC,OAAL,CAAaC,MAAb,GAAsBiB,KAAKA,IAAL,CAAUjB,MAAhC;;AAEAe,kBAAEiB,IAAF,CAAOf,KAAKA,IAAL,CAAUjB,MAAjB,EAAyB,KAAKiC,UAAL,CAAgBpB,IAAhB,CAAqB,IAArB,CAAzB;AACH;AACJ;;AAED;;;;;;;;;mCAMWqB,OAAOlC,QAAQ;AACtB,gBAAImC,YAAY,KAAKzB,OAAL,CACXiB,IADW,CACN,KAAKzB,SAAL,CAAeE,KAAf,GAAuB,SAAvB,GAAmC8B,KAAnC,GAA2C,IADrC,EAEXE,OAFW,CAEH,KAAKlC,SAAL,CAAeC,KAFZ,CAAhB;;AAIAgC,sBAAUE,QAAV,CAAmB,KAAK9B,OAAL,CAAaC,KAAhC;AACA2B,sBAAUG,MAAV,CAAiB,kBAAkB,KAAK/B,OAAL,CAAaE,IAA/B,GAAsC,YAAtC,GAAqDT,OAAOuC,IAAP,CAAY,IAAZ,CAArD,GAAyE,kBAA1F;AACH;;AAED;;;;;;;;8BAKM/B,QAAO;AACTgC,oBAAQhC,KAAR,CAAc,OAAd,EAAuBA,MAAvB;AACH","file":"app.js","sourcesContent":["/**\n * Validate forms with ajax.\n */\nclass Way2Validate {\n    /**\n     * Constructor.\n     *\n     * @param {object} $element\n     */\n    constructor($element) {\n        /** @type {string} */\n        this.version = '1.0.0';\n\n        /**\n         * Global variables.\n         *\n         * @type {Object}\n         */\n        this.globals = {\n            errors:     {},\n            formGroups: []\n        };\n\n        /**\n         * Selectors.\n         *\n         * @type {Object}\n         */\n        this.selectors = {\n            group: '.form-group',\n            input: '.form-control'\n        };\n\n        /**\n         * Attributes.\n         *\n         * @type {Object}\n         */\n        this.attributes = {\n            url: 'validate-url',\n        };\n\n        /**\n         * Classes.\n         *\n         * @type {Object}\n         */\n        this.classes = {\n            error: 'has-error',\n            help:  'help-block'\n        };\n\n        this.element = $element;\n        this.element.on('submit', this.send.bind(this));\n    }\n\n    /**\n     * Submit the form.\n     *\n     * @param {object} event\n     */\n    send(event) {\n        this.element = $(event.target);\n        let url = this.element.data(this.attributes.url);\n        let data = this.element.serialize();\n\n        if(!url) {\n            this.error();\n\n            return;\n        }\n\n        axios({\n            method:         'POST',\n            url:            url,\n            data:           data,\n            validateStatus: (status) => {\n                return status < 500;\n            }\n        })\n            .then(this.success.bind(this))\n            .catch(this.error.bind(this));\n\n        event.preventDefault();\n    }\n\n    /**\n     * Handles a successful validation.\n     *\n     * @param {object} data\n     */\n    success(data) {\n        let formGroups = this.element.find(this.selectors.group);\n\n        if(data.status == 200) {\n            this.globals.errors = {};\n\n            this.element.unbind('submit').submit();\n        } else {\n            formGroups.removeClass(this.classes.error);\n            formGroups.find('.' + this.classes.help).remove();\n\n            this.globals.errors = data.data.errors;\n\n            $.each(data.data.errors, this.showErrors.bind(this));\n        }\n    }\n\n    /**\n     * Show the errors.\n     *\n     * @param {string} field\n     * @param {array}  errors\n     */\n    showErrors(field, errors) {\n        let formGroup = this.element\n            .find(this.selectors.input + '[name=\"' + field + '\"]')\n            .closest(this.selectors.group);\n\n        formGroup.addClass(this.classes.error);\n        formGroup.append('<span class=\"' + this.classes.help + '\"><strong>' + errors.join(', ') + '</strong></span>');\n    }\n\n    /**\n     * Handles a validation error.\n     *\n     * @param {object} error\n     */\n    error(error) {\n        console.error('error', error);\n    }\n}\n"]}