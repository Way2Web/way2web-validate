{"version":3,"sources":["validate.js"],"names":["Way2Validate","$element","version","globals","errors","formGroups","selectors","group","input","attributes","url","method","classes","error","help","element","on","send","bind","event","$","target","data","attr","serialize","axios","validateStatus","status","then","success","preventDefault","find","unbind","submit","removeClass","remove","each","showErrors","field","formGroup","closest","addClass","append","join","console","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Validate forms with ajax.\n */\nclass Way2Validate {\n    /**\n     * Constructor.\n     *\n     * @param {object} $element\n     */\n    constructor($element) {\n        /** @type {string} */\n        this.version = '1.1.0';\n\n        /**\n         * Global variables.\n         *\n         * @type {Object}\n         */\n        this.globals = {\n            errors:     {},\n            formGroups: []\n        };\n\n        /**\n         * Selectors.\n         *\n         * @type {Object}\n         */\n        this.selectors = {\n            group: '.form-group',\n            input: '.form-control'\n        };\n\n        /**\n         * Attributes.\n         *\n         * @type {Object}\n         */\n        this.attributes = {\n            url:    'validate-url',\n            method: 'method'\n        };\n\n        /**\n         * Classes.\n         *\n         * @type {Object}\n         */\n        this.classes = {\n            error: 'has-error',\n            help:  'help-block'\n        };\n\n        this.element = $element;\n        this.element.on('submit', this.send.bind(this));\n    }\n\n    /**\n     * Submit the form.\n     *\n     * @param {object} event\n     */\n    send(event) {\n        this.element = $(event.target);\n        let url = this.element.data(this.attributes.url);\n        let method = this.element.attr(this.attributes.method);\n        let data = this.element.serialize();\n\n        if(!url || !method) {\n            this.error();\n\n            return;\n        }\n\n        axios({\n            method:         method,\n            url:            url,\n            data:           data,\n            validateStatus: (status) => {\n                return status < 500;\n            }\n        })\n            .then(this.success.bind(this))\n            .catch(this.error.bind(this));\n\n        event.preventDefault();\n    }\n\n    /**\n     * Handles a successful validation.\n     *\n     * @param {object} data\n     */\n    success(data) {\n        let formGroups = this.element.find(this.selectors.group);\n\n        if(data.status == 200) {\n            this.globals.errors = {};\n\n            this.element.unbind('submit').submit();\n        } else {\n            formGroups.removeClass(this.classes.error);\n            formGroups.find('.' + this.classes.help).remove();\n\n            this.globals.errors = data.data.errors;\n\n            $.each(data.data.errors, this.showErrors.bind(this));\n        }\n    }\n\n    /**\n     * Show the errors.\n     *\n     * @param {string} field\n     * @param {array}  errors\n     */\n    showErrors(field, errors) {\n        let formGroup = this.element\n            .find(\n                this.selectors.input + '[name=\"' + field + '\"], ' +\n                this.selectors.input + '[name=\"' + field + '[]\"]'\n            )\n            .closest(this.selectors.group);\n\n        formGroup.addClass(this.classes.error);\n        formGroup.append('<span class=\"' + this.classes.help + '\"><strong>' + errors.join(', ') + '</strong></span>');\n    }\n\n    /**\n     * Handles a validation error.\n     *\n     * @param {object} error\n     */\n    error(error) {\n        console.error('error', error);\n    }\n}\n\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = Way2Validate;\n}\n"]}