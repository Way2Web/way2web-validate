{"version":3,"sources":["validate.js"],"names":["Way2Validate","$element","version","globals","errors","formGroups","selectors","group","input","attributes","validate","method","classes","error","help","element","on","send","bind","event","$","target","url","data","attr","serialize","axios","route","validateStatus","status","then","success","catch","preventDefault","find","unbind","submit","removeClass","remove","each","showErrors","field","formGroup","closest","addClass","append","join","console"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Validate forms with ajax.\n */\nclass Way2Validate {\n    /**\n     * Constructor.\n     *\n     * @param {object} $element\n     */\n    constructor($element) {\n        /** @type {string} */\n        this.version = '0.2.0';\n\n        /**\n         * Global variables.\n         *\n         * @type {Object}\n         */\n        this.globals = {\n            errors:     {},\n            formGroups: []\n        };\n\n        /**\n         * Selectors.\n         *\n         * @type {Object}\n         */\n        this.selectors = {\n            group: '.form-group',\n            input: '.form-control'\n        };\n\n        /**\n         * Attributes.\n         *\n         * @type {Object}\n         */\n        this.attributes = {\n            validate: 'validate',\n            method:   'method'\n        };\n\n        /**\n         * Classes.\n         *\n         * @type {Object}\n         */\n        this.classes = {\n            error: 'has-error',\n            help:  'help-block'\n        };\n\n        this.element = $element;\n        this.element.on('submit', this.send.bind(this));\n    }\n\n    /**\n     * Submit the form.\n     *\n     * @param {object} event\n     */\n    send(event) {\n        this.element = $(event.target);\n        let url = this.element.data(this.attributes.validate);\n        let method = this.element.attr(this.attributes.method);\n        let data = this.element.serialize();\n\n        if(!url || !method) {\n            this.error();\n\n            return;\n        }\n\n        axios({\n            method:         method,\n            url:            route(url),\n            data:           data,\n            validateStatus: (status) => {\n                return status < 500;\n            }\n        })\n            .then(this.success.bind(this))\n            .catch(this.error.bind(this));\n\n        event.preventDefault();\n    }\n\n    /**\n     * Handles a successful validation.\n     *\n     * @param {object} data\n     */\n    success(data) {\n        let formGroups = this.element.find(this.selectors.group);\n\n        if(data.status == 200) {\n            this.globals.errors = {};\n\n            this.element.unbind('submit').submit();\n        } else {\n            formGroups.removeClass(this.classes.error);\n            formGroups.find('.' + this.classes.help).remove();\n\n            this.globals.errors = data.data.errors;\n\n            $.each(data.data.errors, this.showErrors.bind(this));\n        }\n    }\n\n    /**\n     * Show the errors.\n     *\n     * @param {string} field\n     * @param {array}  errors\n     */\n    showErrors(field, errors) {\n        let formGroup = this.element\n            .find(this.selectors.input + '[name=\"' + field + '\"]')\n            .closest(this.selectors.group);\n\n        formGroup.addClass(this.classes.error);\n        formGroup.append('<span class=\"' + this.classes.help + '\"><strong>' + errors.join(', ') + '</strong></span>');\n    }\n\n    /**\n     * Handles a validation error.\n     *\n     * @param {object} error\n     */\n    error(error) {\n        console.error('error', error);\n    }\n}\n"]}